version: 2.1

jobs:
  build:
    docker:
      # specify the version
      - image: circleci/openjdk:17-alpine

    working_directory: ~/app

    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.12

      - run:
          name: Install dependencies for Java
          command: |
            ./gradlew dependencies

      - restore_cache:
          keys:
            - v1-gradle-cache-{{ checksum "build.gradle" }}-{{ checksum "settings.gradle" }}

      - run:
          name: Build and Test Java Application
          command: |
            ./gradlew build

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-gradle-cache-{{ checksum "build.gradle" }}-{{ checksum "settings.gradle" }}

      - run:
          name: Build Docker image for Java App
          command: |
            docker build -t my-java-app:$CIRCLE_BUILD_NUM -f Dockerfile .

      - save_cache:
          key: v1-docker-layer-{{ .Branch }}-{{ checksum "Dockerfile" }}
          paths:
            - .

      - run:
          name: Install AWS CLI
          command: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install

      - run:
          name: Configure AWS credentials
          command: |
            aws configure set aws_access_key_id "$AWS_ACCESS_KEY"
            aws configure set aws_secret_access_key "$AWS_SECRET_KEY"
            aws eks update-kubeconfig --region ap-northeast-2 --name stg-ehr-eks

      - run:
          name: Push Docker image for Java App to ECR
          command: |
            aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin $ECR_REPO
            docker tag my-java-app:$CIRCLE_BUILD_NUM $ECR_REPO/adas-repo-java:$CIRCLE_BUILD_NUM
            docker push $ECR_REPO/adas-repo-java:$CIRCLE_BUILD_NUM

      - run:
          name: Install Kustomize
          command: |
            curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
            sudo mv kustomize /usr/local/bin/

      - run:
          name: Update GitOps Manifest
          command: |
            TAG=$CIRCLE_BUILD_NUM
            git clone https://$GIT_NAME:$GITHUB_TOKEN_WEB@github.com/$GIT_NAME/manifest.git
            cd manifest
            echo $TAG
            sed -i "s/newTag: .*/newTag: \"$TAG\"/" ./java/overlay/staging/kustomization.yaml
            kustomize build java/overlay/staging > staging.yaml
            git config --global user.email "$GIT_EMAIL"
            git config --global user.name "$GIT_NAME"
            git add .
            git commit -m "New build with imgTag build-$TAG"
            git config credential.helper 'cache --timeout=120'
            git push https://$GIT_NAME:$GITHUB_TOKEN_WEB@github.com/$GIT_NAME/manifest.git main

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build:
          filters:
            branches:
              only:
                - staging
          context: Staging
      - build:
          filters:
            branches:
              only:
                - main
          context: Staging
